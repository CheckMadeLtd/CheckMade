<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <OutputType>WinExe</OutputType>
        <!--If you are willing to use Windows/MacOS native APIs you will need to create 3 projects.
        One for Windows with net8.0-windows TFM, one for MacOS with net8.0-macos and one with net8.0 TFM for Linux.-->
        <BuiltInComInteropSupport>true</BuiltInComInteropSupport>
        <Configurations>Debug_Desktop;Debug_All;No_Build;Release</Configurations>
        <Platforms>AnyCPU</Platforms>
    </PropertyGroup>

    <PropertyGroup>
        <ApplicationManifest>app.manifest</ApplicationManifest>
    </PropertyGroup>

    <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
        <Optimize>true</Optimize>
    </PropertyGroup>

    <PropertyGroup Condition=" $([System.Text.RegularExpressions.Regex]::IsMatch($(Configuration), '^Debug_')) ">
        <DebugSymbols>true</DebugSymbols>
        <Optimize>false</Optimize>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="Avalonia.Desktop" Version="$(AvaloniaVersion)" />
        <PackageReference Include="Avalonia" Version="$(AvaloniaVersion)"/>
        <PackageReference Include="Avalonia.Themes.Fluent" Version="$(AvaloniaVersion)"/>
        <PackageReference Include="Avalonia.Fonts.Inter" Version="$(AvaloniaVersion)"/>
        <PackageReference Condition=" $([System.Text.RegularExpressions.Regex]::IsMatch($(Configuration), '^Debug_')) " Include="Avalonia.Diagnostics" Version="$(AvaloniaVersion)"/>
    </ItemGroup>

    <ItemGroup>
      <Compile Update="App.axaml.cs">
        <DependentUpon>App.axaml</DependentUpon>
        <SubType>Code</SubType>
      </Compile>
    </ItemGroup>

    <ItemGroup>
      <ProjectReference Include="..\CheckMade.Desktop.Views\CheckMade.Desktop.Views.csproj" />
    </ItemGroup>
</Project>
